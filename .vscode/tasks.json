{
    "version": "2.0.0",
        "tasks": [
            {
        "label": "Bootstrap Python (uv)",
        "type": "shell",
        "command": "bash",
        "args": [
            "./script/bootstrap.sh"
        ],
        "windows": {
            "command": "powershell",
            "args": [
                "-ExecutionPolicy",
                "Bypass",
                "-File",
                "./script/bootstrap.ps1"
            ]
        },
        "runOptions": {
            "runOn": "folderOpen"
        },
        "dependsOn": ["git pull on startup"],
        "dependsOrder": "sequence",
        "presentation": {
            "echo": true,
            "reveal": "always",
            "focus": false,
            "panel": "dedicated",
            "showReuseMessage": false,
            "clear": false,
            "close": false
        },
        "problemMatcher": []
        },
        {
            "label": "Activate Python Environment",
            "type": "shell",
            "command": "bash",
            "args": [
                "-c",
                "source .venv/bin/activate && exec bash"
            ],
            "windows": {
                "command": "powershell",
                "args": [
                    "-ExecutionPolicy",
                    "Bypass",
                    "-NoExit",
                    "-Command",
                    "& { .\.venv\Scripts\Activate.ps1 }"
                ]
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Run-on-my-robot",
            "type": "shell",
            "command": "/bin/bash",
            "args": [
              "-l",
              "-c",
              "${workspaceFolder}/.vscode/runRobot.sh ${workspaceFolder}/.robotName ${file}"
            ],
            "problemMatcher": {
                "owner": "python",
                "fileLocation": [
                    "absolute"
                ],
                "pattern": {
                    "regexp": "^(.*)File(.*)(C:(.*)\\.py)(.*)(line(\\s*))([0-9]+),",
                    "file": 3,
                    "line": 8
                }
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": false,
                "revealProblems": "onProblem"
            }
        },
        {
            "label": "Run-master_program-on-my-robot",
            "type": "shell",
            "command": "/bin/bash",
            "args": [
              "-l",
              "-c",
              "${workspaceFolder}/.vscode/runRobot.sh ${workspaceFolder}/.robotName ${workspaceFolder}/master_program.py"
            ],
            "problemMatcher": {
                "owner": "python",
                "fileLocation": [
                    "absolute"
                ],
                "pattern": {
                    "regexp": "^(.*)File(.*)(C:(.*)\\.py)(.*)(line(\\s*))([0-9]+),",
                    "file": 3,
                    "line": 8
                }
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": false,
                "revealProblems": "onProblem"
            }
        },
      
        {
            "label": "Run-on-any-robot",
            "type": "shell",
            "command": "pybricksdev",
            "args": [
                "run",
                "ble",
                "--name",
                "${input:robotName}",
                "${file}"
            ],
            "problemMatcher": {
                "owner": "python",
                "fileLocation": [
                    "absolute"
                ],
                "pattern": {
                    "regexp": "^(.*)File(.*)(C:(.*)\\.py)(.*)(line(\\s*))([0-9]+),",
                    "file": 3,
                    "line": 8
                }
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": false,
                "revealProblems": "onProblem"
            }
        },
        {
            "label": "Run-master_program.py-on-any-robot",
            "type": "shell",
            "command": "pybricksdev",
            "args": [
                "run",
                "ble",
                "--name",
                "${input:robotName}",
                "master_program.py"
            ],
            "problemMatcher": {
                "owner": "python",
                "fileLocation": [
                    "absolute"
                ],
                "pattern": {
                    "regexp": "^(.*)File(.*)(C:(.*)\\.py)(.*)(line(\\s*))([0-9]+),",
                    "file": 3,
                    "line": 8
                }
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": false,
                "clear": false,
                "revealProblems": "onProblem"
            }
        },
        {
            "label": "git pull on startup",
            "type": "shell",
            "command": "git fetch && git pull",
            "windows": {
                "command": "git pull"
            },
            "presentation": {
                "reveal": "always",
                "panel": "dedicated",
                "showReuseMessage": false,
                "close": false
            },
            "problemMatcher": []
        }
    ],
    "inputs": [
        {
            "type": "pickString",
            "id": "robotName",
            "description": "Which Robot?",
            "options": [
                "Squirt",
                "Sunset",
                "Crush",
                "Chaos"
            ]
        }
    ],
}


